#For this project I downloaded a Spotify database from Kaggle 
#Then I created a table to insert Spotify data into and 
#finally I performed analytics on the data using SQL

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

/* What are the top 10 most popular artists? */
SELECT artist_name, avg(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg(popularity) desc LIMIT 10;

/* What are the top songs that have more danceability than average? */
SELECT AVG(danceability)
FROM BIT_DB.Spotifydata;

SELECT track_name, danceability
FROM BIT_DB.Spotifydata
WHERE danceability>(SELECT AVG(danceability) FROM BIT_DB.Spotifydata)
ORDER BY danceability desc;

/* What is the most popular song of each artist and out of how many songs? */
SELECT artist_name, track_name, MAX(popularity), COUNT(*)
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

/* What songs are the shorterest and below average duration? Including the artist */
SELECT avg(duration_ms)
FROM BIT_DB.Spotifydata;

SELECT duration_ms, track_name,artist_name
FROM BIT_DB.Spotifydata
WHERE duration_ms>(
SELECT avg(duration_ms)
FROM BIT_DB.Spotifydata)
ORDER BY duration_ms asc;

/* Which artist have the best tempo? */
SELECT artist_name, avg(tempo)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg(tempo) desc

/* Label the ten most popular artist as top star */
WITH avg_popularity AS(
SELECT s.artist_name, AVG(s.popularity) AS average_popularity
FROM Spotifydata s
GROUP BY s.artist_name
)
SELECT artist_name, 
       average_popularity,
       'Top Star' as tag
FROM avg_popularity
WHERE average_popularity>=90
ORDER BY average_popularity desc
